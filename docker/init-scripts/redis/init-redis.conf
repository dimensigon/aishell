# Redis Configuration for AIShell Testing
# This configuration enables all necessary features for comprehensive testing

# ====================================
# NETWORK CONFIGURATION
# ====================================
bind 0.0.0.0
protected-mode yes
port 6379
tcp-backlog 511
timeout 0
tcp-keepalive 300

# ====================================
# GENERAL CONFIGURATION
# ====================================
daemonize no
supervised no
pidfile /var/run/redis_6379.pid
loglevel notice
logfile /var/log/redis/redis-server.log
databases 16
always-show-logo yes

# ====================================
# SNAPSHOTTING (RDB PERSISTENCE)
# ====================================
# Save the DB to disk
# Format: save <seconds> <changes>
save 900 1      # After 900 sec (15 min) if at least 1 key changed
save 300 10     # After 300 sec (5 min) if at least 10 keys changed
save 60 10000   # After 60 sec if at least 10000 keys changed

stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb
dir /data

# ====================================
# REPLICATION
# ====================================
replica-serve-stale-data yes
replica-read-only yes
repl-diskless-sync no
repl-diskless-sync-delay 5
repl-disable-tcp-nodelay no
replica-priority 100

# ====================================
# SECURITY
# ====================================
# Require password for connections
requirepass testpass123

# Rename dangerous commands
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command CONFIG "CONFIG_ADMIN_ONLY"

# ====================================
# MEMORY MANAGEMENT
# ====================================
# Set maximum memory to 256MB for testing
maxmemory 256mb

# Memory eviction policy
# - noeviction: return errors when memory limit is reached
# - allkeys-lru: evict any key using LRU algorithm
# - volatile-lru: evict keys with expire set using LRU
# - allkeys-random: evict random keys
# - volatile-random: evict random keys with expire set
# - volatile-ttl: evict keys with expire set and shortest TTL
maxmemory-policy allkeys-lru

# LRU and LFU algorithm tuning
maxmemory-samples 5

# ====================================
# LAZY FREEING
# ====================================
lazyfree-lazy-eviction no
lazyfree-lazy-expire no
lazyfree-lazy-server-del no
replica-lazy-flush no

# ====================================
# APPEND ONLY FILE (AOF PERSISTENCE)
# ====================================
# Enable AOF persistence in addition to RDB
appendonly yes
appendfilename "appendonly.aof"

# AOF sync policy
# - always: fsync after every write (slow, safest)
# - everysec: fsync once per second (good balance)
# - no: let OS decide when to fsync (fastest, least safe)
appendfsync everysec

no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes
aof-use-rdb-preamble yes

# ====================================
# LUA SCRIPTING
# ====================================
lua-time-limit 5000

# ====================================
# SLOW LOG
# ====================================
# Log queries slower than this many microseconds
slowlog-log-slower-than 10000

# Keep last 128 slow queries in memory
slowlog-max-len 128

# ====================================
# LATENCY MONITOR
# ====================================
latency-monitor-threshold 100

# ====================================
# EVENT NOTIFICATION
# ====================================
# Enable keyspace notifications for expired and evicted events
notify-keyspace-events "Ex"

# ====================================
# ADVANCED CONFIG
# ====================================
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
list-compress-depth 0
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64
hll-sparse-max-bytes 3000
stream-node-max-bytes 4096
stream-node-max-entries 100
activerehashing yes
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60
hz 10
dynamic-hz yes
aof-rewrite-incremental-fsync yes
rdb-save-incremental-fsync yes

# ====================================
# ACTIVE DEFRAGMENTATION
# ====================================
# Enabled (Redis 4.0+)
activedefrag yes
active-defrag-ignore-bytes 100mb
active-defrag-threshold-lower 10
active-defrag-threshold-upper 100
active-defrag-cycle-min 5
active-defrag-cycle-max 75
active-defrag-max-scan-fields 1000

# ====================================
# MODULES
# ====================================
# Load modules if available (RedisJSON, RedisSearch, etc.)
# loadmodule /usr/lib/redis/modules/rejson.so
# loadmodule /usr/lib/redis/modules/redisearch.so

# ====================================
# TESTING NOTES
# ====================================
# This configuration is optimized for testing the following features:
#
# 1. PERSISTENCE:
#    - RDB snapshots enabled (3 save points)
#    - AOF persistence enabled with everysec fsync
#    - Both persistence methods can be tested
#
# 2. MEMORY MANAGEMENT:
#    - 256MB memory limit
#    - LRU eviction policy
#    - Test memory limits and eviction
#
# 3. SECURITY:
#    - Password protection enabled (testpass123)
#    - Dangerous commands renamed/disabled
#    - Test authentication
#
# 4. MONITORING:
#    - Slow log enabled
#    - Latency monitoring enabled
#    - Keyspace notifications enabled
#
# 5. PERFORMANCE:
#    - Active defragmentation enabled
#    - Optimized data structure limits
#    - Active rehashing enabled
#
# 6. RELIABILITY:
#    - Dual persistence (RDB + AOF)
#    - Checksum verification
#    - Incremental fsync
#
# CONNECTION:
#    Host: localhost
#    Port: 6379
#    Password: testpass123
#    Command: redis-cli -a testpass123
