[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agentic-aishell"
version = "2.0.0"
description = "Agentic AI-powered database management CLI with local LLMs and MCP integration"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "AIShell Contributors", email = "aishell@example.com"}
]
maintainers = [
    {name = "AIShell Contributors", email = "aishell@example.com"}
]
keywords = [
    "ai", "database", "cli", "llm", "mcp", "postgresql", "mysql",
    "oracle", "mongodb", "automation", "agent", "textual"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]

dependencies = [
    # Core async & utilities
    "aiofiles==23.2.1",
    "asyncio-mqtt==0.16.1",
    "psutil==5.9.8",

    # CLI & UI
    "textual==0.47.1",
    "rich==13.7.0",
    "prompt-toolkit==3.0.43",

    # Configuration
    "pyyaml==6.0.1",
    "python-dotenv==1.0.0",

    # Database drivers
    "asyncpg==0.29.0",
    "aiomysql==0.3.0",
    "oracledb==2.0.0",
    "motor==3.3.2",
    "redis==5.0.1",

    # Vector & ML
    "faiss-cpu==1.9.0.post1",
    "numpy==1.26.3",
    "sentence-transformers==2.2.2",

    # LLM integration
    "openai==1.7.2",
    "anthropic==0.8.1",
    "ollama==0.1.6",

    # Security
    "cryptography==44.0.1",
    "pydantic==2.5.3",
]

[project.optional-dependencies]
dev = [
    "pytest==8.4.2",
    "pytest-asyncio==1.2.0",
    "pytest-cov==7.0.0",
    "pytest-mock==3.15.1",
    "black==25.9.0",
    "ruff==0.14.2",
    "mypy==1.18.2",
]

docs = [
    "sphinx==7.2.6",
    "sphinx-rtd-theme==2.0.0",
    "sphinx-autodoc-typehints==1.25.2",
]

all = [
    "agentic-aishell[dev,docs]",
]

[project.urls]
Homepage = "https://github.com/yourusername/AIShell"
Documentation = "https://aishell.readthedocs.io"
Repository = "https://github.com/yourusername/AIShell"
Issues = "https://github.com/yourusername/AIShell/issues"
Changelog = "https://github.com/yourusername/AIShell/blob/main/CHANGELOG.md"

[project.scripts]
agentic-aishell = "src.main:main"
aishell = "src.main:main"
ai-shell = "src.main:main"

[tool.setuptools]
package-dir = {"" = "."}
packages = {find = {where = ["."], include = ["src*"]}}

[tool.setuptools.package-data]
src = ["py.typed", "**/*.yaml", "**/*.json"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "F", "W", "I", "N", "UP", "ANN", "B", "A", "COM", "C4", "DTZ", "T10", "ISC", "ICN", "PIE", "PT", "Q", "RSE", "RET", "SIM", "TID", "TCH", "ARG", "PLE", "PLR", "PLW", "RUF"]
ignore = ["ANN101", "ANN102", "ANN401", "PLR0913", "PLR2004"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
